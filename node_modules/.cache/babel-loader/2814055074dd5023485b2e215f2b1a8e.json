{"ast":null,"code":"var _jsxFileName = \"/Users/benfung/Desktop/GitHub/ClickyGame/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport DogCard from \"./components/DogCard\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport dogs from \"./dogs.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dogs,\n      clickedId: [],\n      score: 0,\n      goal: 5,\n      status: \"\"\n    };\n\n    this.shuffledDog = id => {\n      let clickedId = this.state.clickedId;\n\n      if (clickedId.includes(id)) {\n        this.setState({\n          clickedId: [],\n          score: 0,\n          status: \"Game Over\"\n        });\n        return;\n      } else {\n        clickedId.push(id);\n\n        if (clickedId.length === goal) {\n          this.setState({\n            status: \"You Won\",\n            clickedId: []\n          });\n          return;\n        }\n\n        this.setState({\n          dogs,\n          clickedId,\n          score: clickedId.length,\n          status: \" \"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Clicky Game\"), shuffledDog.map(dog => /*#__PURE__*/React.createElement(DogCard, {\n      id: dog.id,\n      key: dog.id,\n      image: dog.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/benfung/Desktop/GitHub/ClickyGame/clicky-game/src/App.js"],"names":["React","Component","DogCard","Title","Wrapper","dogs","App","state","clickedId","score","goal","status","shuffledDog","id","includes","setState","push","length","render","map","dog","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA,IADM;AAENG,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,KAAK,EAAE,CAHD;AAINC,MAAAA,IAAI,EAAE,CAJA;AAKNC,MAAAA,MAAM,EAAE;AALF,KAFkB;;AAAA,SAsB1BC,WAtB0B,GAsBZC,EAAE,IAAI;AAClB,UAAIL,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;;AAEA,UAAGA,SAAS,CAACM,QAAV,CAAmBD,EAAnB,CAAH,EAA2B;AACzB,aAAKE,QAAL,CAAc;AAAEP,UAAAA,SAAS,EAAE,EAAb;AAAiBC,UAAAA,KAAK,EAAE,CAAxB;AAA2BE,UAAAA,MAAM,EAAE;AAAnC,SAAd;AACA;AACD,OAHD,MAIK;AACHH,QAAAA,SAAS,CAACQ,IAAV,CAAeH,EAAf;;AAEA,YAAGL,SAAS,CAACS,MAAV,KAAqBP,IAAxB,EAA8B;AAC5B,eAAKK,QAAL,CAAc;AAAEJ,YAAAA,MAAM,EAAE,SAAV;AAAqBH,YAAAA,SAAS,EAAE;AAAhC,WAAd;AACA;AACD;;AAED,aAAKO,QAAL,CAAc;AAAEV,UAAAA,IAAF;AAAQG,UAAAA,SAAR;AAAmBC,UAAAA,KAAK,EAAED,SAAS,CAACS,MAApC;AAA4CN,UAAAA,MAAM,EAAE;AAApD,SAAd;AACD;AACF,KAvCyB;AAAA;;AAyC1BO,EAAAA,MAAM,GAAG;AAEP,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGN,WAAW,CAACO,GAAZ,CAAgBC,GAAG,iBAClB,oBAAC,OAAD;AACA,MAAA,EAAE,EAAEA,GAAG,CAACP,EADR;AAEA,MAAA,GAAG,EAAEO,GAAG,CAACP,EAFT;AAGA,MAAA,KAAK,EAAEO,GAAG,CAACC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAYD;;AAvDyB;;AA0D5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport DogCard from \"./components/DogCard\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport dogs from \"./dogs.json\";\n\nclass App extends Component {\n\n  state = {\n    dogs,\n    clickedId: [],\n    score: 0,\n    goal: 5,\n    status: \"\"\n  };\n\n  // shuffledArray = array => {\n  //   let ctr = array.length, temp, index;\n  //   while (ctr > 0) {\n  //     index = Math.floor(Math.random() * ctr);\n  //     ctr--;\n  //     temp = array[ctr];\n  //     array[ctr] = array[index];\n  //     array[index] = temp;\n  //   }\n  //   return array;\n  // }\n\n  shuffledDog = id => {\n    let clickedId = this.state.clickedId;\n\n    if(clickedId.includes(id)) {\n      this.setState({ clickedId: [], score: 0, status: \"Game Over\" });\n      return;\n    }\n    else {\n      clickedId.push(id);\n\n      if(clickedId.length === goal) {\n        this.setState({ status: \"You Won\", clickedId: [] });\n        return;\n      }\n\n      this.setState({ dogs, clickedId, score: clickedId.length, status: \" \"})\n    }\n  }\n  \n  render() {\n    \n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        {shuffledDog.map(dog =>\n          <DogCard\n          id={dog.id}\n          key={dog.id}\n          image={dog.image}\n          />\n          )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}