{"ast":null,"code":"var _jsxFileName = \"/Users/benfung/Desktop/GitHub/ClickyGame/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport DogCard from \"./components/DogCard\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport dogs from \"./dogs.json\";\nimport Score from \"./components/Score\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dogs,\n      clickedId: [],\n      score: 0,\n      goal: 5,\n      status: \"\"\n    };\n\n    this.shuffledDog = id => {\n      let clickedId = this.state.clickedId;\n\n      if (clickedId.includes(id)) {\n        this.setState({\n          clickedId: [],\n          score: 0,\n          status: \"You guessed incorrectly! Game Over\"\n        });\n        return;\n      } else {\n        this.setState({\n          status: \"You guessed correctly!\"\n        });\n        clickedId.push(id);\n        this.setState({\n          score: this.state.count + 1\n        });\n\n        if (clickedId.length === this.state.goal) {\n          this.setState({\n            status: \"You Won\",\n            clickedId: []\n          });\n          return;\n        }\n\n        this.setState({\n          dogs,\n          clickedId,\n          score: clickedId.length\n        });\n        let ctr = dogs.length,\n            temp,\n            index;\n\n        while (ctr > 0) {\n          index = Math.floor(Math.random() * ctr);\n          ctr--;\n          temp = dogs[ctr];\n          dogs[ctr] = dogs[index];\n          dogs[index] = temp;\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      status: \"Click an image to begin\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Score, {\n      goal: this.state.goal,\n      status: this.state.status,\n      score: this.state.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Clicky Game\"), this.state.dogs.map(dog => /*#__PURE__*/React.createElement(DogCard, {\n      shuffledDog: this.shuffledDog,\n      id: dog.id,\n      key: dog.id,\n      image: dog.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/benfung/Desktop/GitHub/ClickyGame/clicky-game/src/App.js"],"names":["React","Component","DogCard","Title","Wrapper","dogs","Score","App","state","clickedId","score","goal","status","shuffledDog","id","includes","setState","push","count","length","ctr","temp","index","Math","floor","random","componentDidMount","render","map","dog","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DogCard from \"./components/DogCard\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport dogs from \"./dogs.json\";\nimport Score from \"./components/Score\";\n\nclass App extends Component {\n\n  state = {\n    dogs,\n    clickedId: [],\n    score: 0,\n    goal: 5,\n    status: \"\"\n  };\n\n  componentDidMount() {\n    this.setState({ status: \"Click an image to begin\"})\n  }\n\n  shuffledDog = id => {\n\n    let clickedId = this.state.clickedId;\n\n    if (clickedId.includes(id)) {\n      this.setState({ clickedId: [], score: 0, status: \"You guessed incorrectly! Game Over\" });\n      return;\n    }\n    else {\n      this.setState({ status: \"You guessed correctly!\"})\n      clickedId.push(id);\n\n      this.setState({ score: this.state.count + 1 })\n\n      if (clickedId.length === this.state.goal) {\n        this.setState({ status: \"You Won\", clickedId: [] });\n        return;\n      }\n\n      this.setState({ dogs, clickedId, score: clickedId.length });\n\n      let ctr = dogs.length, temp, index;\n      while (ctr > 0) {\n        index = Math.floor(Math.random() * ctr);\n        ctr--;\n        temp = dogs[ctr];\n        dogs[ctr] = dogs[index];\n        dogs[index] = temp;\n      }\n    }\n  }\n\n  render() {\n\n    return (\n      <Wrapper>\n      <Score\n        goal={this.state.goal}\n        status={this.state.status}\n        score={this.state.score}\n      />\n        <Title>Clicky Game</Title>\n        {this.state.dogs.map(dog =>\n          <DogCard\n            shuffledDog={this.shuffledDog}\n            id={dog.id}\n            key={dog.id}\n            image={dog.image}\n          />\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}